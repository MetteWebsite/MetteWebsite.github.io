{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nvar Source = require(\"./Source\");\n\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nclass RawSource extends Source {\n  constructor(value) {\n    super();\n    this._value = value;\n  }\n\n  source() {\n    return this._value;\n  }\n\n  map(options) {\n    return null;\n  }\n\n  node(options) {\n    return new SourceNode(null, null, null, this._value);\n  }\n\n  listMap(options) {\n    return new SourceListMap(this._value);\n  }\n\n  updateHash(hash) {\n    hash.update(this._value);\n  }\n\n}\n\nmodule.exports = RawSource;","map":{"version":3,"sources":["C:/Users/emmab/Documents/GitHub/MetteWebsite.github.io/node_modules/webpack-sources/lib/RawSource.js"],"names":["Source","require","SourceNode","SourceListMap","RawSource","constructor","value","_value","source","map","options","node","listMap","updateHash","hash","update","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBC,UAAvC;;AACA,IAAIC,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAAP,CAA2BE,aAA/C;;AAEA,MAAMC,SAAN,SAAwBJ,MAAxB,CAA+B;AAC9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB;AACA,SAAKC,MAAL,GAAcD,KAAd;AACA;;AAEDE,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKD,MAAZ;AACA;;AAEDE,EAAAA,GAAG,CAACC,OAAD,EAAU;AACZ,WAAO,IAAP;AACA;;AAEDC,EAAAA,IAAI,CAACD,OAAD,EAAU;AACb,WAAO,IAAIR,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,KAAKK,MAAtC,CAAP;AACA;;AAEDK,EAAAA,OAAO,CAACF,OAAD,EAAU;AAChB,WAAO,IAAIP,aAAJ,CAAkB,KAAKI,MAAvB,CAAP;AACA;;AAEDM,EAAAA,UAAU,CAACC,IAAD,EAAO;AAChBA,IAAAA,IAAI,CAACC,MAAL,CAAY,KAAKR,MAAjB;AACA;;AAxB6B;;AA2B/BS,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\n\r\nclass RawSource extends Source {\r\n\tconstructor(value) {\r\n\t\tsuper();\r\n\t\tthis._value = value;\r\n\t}\r\n\r\n\tsource() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tmap(options) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tnode(options) {\r\n\t\treturn new SourceNode(null, null, null, this._value);\r\n\t}\r\n\r\n\tlistMap(options) {\r\n\t\treturn new SourceListMap(this._value);\r\n\t}\r\n\r\n\tupdateHash(hash) {\r\n\t\thash.update(this._value);\r\n\t}\r\n}\r\n\r\nmodule.exports = RawSource;\r\n"]},"metadata":{},"sourceType":"script"}